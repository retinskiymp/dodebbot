#!/usr/bin/env python3
from telegram import Update
from telegram.ext import (
    ApplicationBuilder,
    MessageHandler,
    CommandHandler,
    ContextTypes,
    filters,
)

TOKEN = "7899355394:AAFiSRwuXWGP-fFBWraH_l9Le2FVTTAZzWw"
SPIN_COST = 1
START_BALANCE = 50
MAP = [1, 2, 3, 0]                 # —Ä–∞—Å–∫–æ–¥–∏—Ä–æ–≤–∫–∞ –±–∞—Ä–∞–±–∞–Ω–æ–≤


# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
def _decode(val: int) -> list[int]:
    """1‚Ä¶64 ‚Üí —Ç—Ä–∏ —Å–∏–º–≤–æ–ª–∞ 0‚Ä•3 (0 ‚Äî —ç—Ç–æ 7Ô∏è‚É£)."""
    v = val - 1
    return [MAP[v & 3], MAP[(v >> 2) & 3], MAP[(v >> 4) & 3]]


def get_jackpot(chat_data: dict) -> int:
    """–í—Å–µ–≥–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –¥–∂–µ–∫-–ø–æ—Ç (min 10)."""
    if "jackpot" not in chat_data or chat_data["jackpot"] < 10:
        chat_data["jackpot"] = 10
    return chat_data["jackpot"]


# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ /jackpot ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
async def jackpot_cmd(update: Update, context: ContextTypes.DEFAULT_TYPE):
    jp = get_jackpot(context.chat_data)
    await update.message.reply_text(f"üéØ –¢–µ–∫—É—â–∏–π –¥–∂–µ–∫-–ø–æ—Ç: {jp} –æ—á–∫–æ–≤")


# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ –æ—Å–Ω–æ–≤–Ω–æ–π —Å–ø–∏–Ω ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
async def casino_spin(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.effective_chat.id
    dice_msg = update.message
    balance = context.user_data.get("balance", START_BALANCE)

    # ‚îÄ‚îÄ –µ—Å–ª–∏ –±–∞–ª–∞–Ω—Å —É–∂–µ < 0 ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
    if balance < 0:
        # —É–¥–∞–ª—è–µ–º –ø—Ä–æ—à–ª—ã–π üé∞ –∏ –æ—Ç–≤–µ—Ç –±–æ—Ç–∞
        for key in ("last_slot_id", "last_bot_id"):
            mid = context.user_data.get(key)
            if mid:
                try:
                    await context.bot.delete_message(chat_id, mid)
                except Exception:
                    pass
        # —É–¥–∞–ª—è–µ–º —ç—Ç–æ—Ç üé∞
        try:
            await context.bot.delete_message(chat_id, dice_msg.message_id)
        except Exception:
            pass

        # –æ—Ç–≤–µ—á–∞–µ–º ¬´–Ω–µ—Ç –¥–µ–Ω–µ–≥¬ª
        bot_msg = await context.bot.send_message(
            chat_id, f"‚ùå {update.effective_user.first_name}, –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –æ—á–∫–æ–≤. –û—Ç–¥–æ—Ö–Ω–∏!")
        context.user_data["last_bot_id"] = bot_msg.message_id
        return

    # ‚îÄ‚îÄ –Ω–æ—Ä–º–∞–ª—å–Ω–∞—è –∏–≥—Ä–∞ ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
    balance -= SPIN_COST                            # —Å—Ç–∞–≤–∫–∞
    jackpot = get_jackpot(context.chat_data) + SPIN_COST  # –ø–æ–ø–æ–ª–Ω—è–µ–º –±–∞–Ω–∫

    # —Å—á–∏—Ç–∞–µ–º –ø—Ä–∏–∑
    val = dice_msg.dice.value
    symbols = _decode(val)
    sevens = symbols.count(0)

    if val == 64:                                   # 7Ô∏è‚É£7Ô∏è‚É£7Ô∏è‚É£
        prize = 10 + jackpot
        jackpot = 10                                # —Å–±—Ä–æ—Å –±–∞–Ω–∫–∞
    elif len(set(symbols)) == 1:                    # —Ç—Ä–∏ –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö
        prize = 7
    elif sevens == 2:                               # —Ä–æ–≤–Ω–æ –¥–≤–µ 7-–∫–∏
        prize = 5
    else:
        prize = 0

    balance += prize
    profit = prize - SPIN_COST

    # —Å–æ—Ö—Ä–∞–Ω—è–µ–º –±–∞–ª–∞–Ω—Å –∏ –±–∞–Ω–∫
    context.user_data["balance"] = balance
    context.chat_data["jackpot"] = jackpot

    # —É–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â—É—é –ø–∞—Ä—É —Å–æ–æ–±—â–µ–Ω–∏–π
    for key in ("last_slot_id", "last_bot_id"):
        mid = context.user_data.get(key)
        if mid:
            try:
                await context.bot.delete_message(chat_id, mid)
            except Exception:
                pass

    # –∑–∞–ø–æ–º–∏–Ω–∞–µ–º –∏ –æ—Ç–≤–µ—á–∞–µ–º
    context.user_data["last_slot_id"] = dice_msg.message_id
    reply = (f"üí∏: -{SPIN_COST} | ü§ë: {prize} "
             f"| üè¶: {balance} (üíπ {profit})")
    bot_msg = await dice_msg.reply_text(reply)
    context.user_data["last_bot_id"] = bot_msg.message_id


# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ –∑–∞–ø—É—Å–∫ ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
def main() -> None:
    app = ApplicationBuilder().token(TOKEN).build()

    slot_filter = filters.Dice.SLOT_MACHINE & ~filters.FORWARDED
    app.add_handler(MessageHandler(slot_filter, casino_spin))
    app.add_handler(CommandHandler("jackpot", jackpot_cmd))

    app.run_polling()


if __name__ == "__main__":
    main()
